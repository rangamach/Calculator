@model standcalcwaspnet.Models.CalcModel
@{
    ViewData["Title"] = "Home Page";
}
<script src="~/lib/jquery/jquery-3.6.3.js"></script>
<style>
    input{
        background-color:darkred;
        color: indianred;
        border-radius: 10px;
        transition:all 0.3s;

    }
    .calcbrowser{
        background-color: darkred;
        width:200px;
        height: 300px;
        border-radius:5px;
    }

    .textbox_inp {
        background-color:darkolivegreen;
        color:black;
        box-shadow: 5px 10px black;
    }

    .textbox_res {
        background-color: darkolivegreen;
        color: black;
        box-shadow: 5px 10px black;
    }
    p{
        color:palevioletred;
    }
    button{
        color:deeppink;
        background-color:hotpink;
        box-shadow: 2.5px 5px black;
        border-radius:10px;
        transition:all 0.3s;
    }
    button:hover{
            background-color: deeppink;
            color: hotpink;
    }
    input:hover {
        background-color: indianred;
        color: darkred;
        }
</style>
<h1 is="ttle">Calculator</h1>
<br>
<div class="calcbrowser">
    <p>@Html.DisplayFor(u=>u.user) --> @Html.DisplayFor(s=>s.userReqCount)</p>
    <br />
    <table id="buttons">
        <tr>
            <td><button>1</button></td>
            <td><button>2</button></td>
            <td><button>3</button></td>
            <td><button>+</button></td>
            <td><button>-</button></td>
            <td><button>.</button></td>
        </tr>
        <tr>
            <td><button>4</button></td>
            <td><button>5</button></td>
            <td><button>6</button></td>
            <td><button>*</button></td>
            <td><button>/</button></td>
        </tr>
        <tr>
            <td><button>7</button></td>
            <td><button>8</button></td>
            <td><button>9</button></td>
            <td><button>(</button></td>
            <td><button>)</button></td>
        </tr>
        <tr>
            <td><button>X</button></td>
            <td><button>0</button></td>
            <td><button id="clear">C</button></td>
            <td><button>^</button></td>
    </table>
    @using (Html.BeginForm())
    {
        <div class="input">
            <table>
                <tr>
                    <td>
                        @Html.TextBoxFor(s=>s.infstr,new { @readonly = true,@class = "textbox_inp" })
                    </td>
                </tr>
                <tr>
                    <td colspan="2" align="center">
                        <input type="submit" value="=" />
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.TextBoxFor(t=>t.result,new { @readonly = true,@class = "textbox_res" })
                    </td>
                </tr>
            </table>
        </div>
    }
</div>
    <script>
        x = $("button");
        y = $(".textbox_inp")[0];
        var decimal = false;
        //loop to add click event to the operators and operands buttons except equals button...
        for (var i = 0; i < x.length; i++)
        {
            //alert('button events adding');
            x[i].addEventListener("click", pressed);
        }
    //function that validates at runtime the given expression is valid or not...
    function pressed(event) {
            var original;
            const oparray = ["+", "-", "*", "/", "^"];
            var curValisOperator = false;
            var last = y.value.substr(-1);
            if (oparray.includes(event.target.innerHTML)) {
                curValisOperator = true;
                decimal = false;
            }
            if (
                event.target.innerHTML != "=" &&
                event.target.innerHTML != "X" &&
                event.target.innerHTML != "C" &&
                event.target.innerHTML != "√" &&
                event.target.innerHTML != "."
            ) {
                if (
                    (!curValisOperator &&
                        !(
                            last == "+" ||
                            last == "-" ||
                            last == "*" ||
                            last == "/" ||
                            last == "^"
                        )) ||
                    (curValisOperator &&
                        !(
                            last == "+" ||
                            last == "-" ||
                            last == "*" ||
                            last == "/" ||
                            last == "^"
                        )) ||
                    (!curValisOperator &&
                        (last == "+" ||
                            last == "-" ||
                            last == "*" ||
                            last == "/" ||
                            last == "^"))
                ) {
                    y.value += event.target.innerHTML;
                }
            }
            else if (event.target.innerHTML == "." && decimal == false) {
                y.value += ".";
                decimal = true;
            }
            else if (event.target.innerHTML == "X") {
                y.value = y.value.substr(0, y.value.length - 1);
            } else if (event.target.innerHTML == "C") {
                y.value = "";
            }
    }
</script>